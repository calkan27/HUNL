--- a/poker_utils.py
+++ b/poker_utils.py
@@ -118,19 +118,20 @@
         return s[:2]
 
 def _normalize_cards(card_iterable):
-		out = []
-		if isinstance(card_iterable, (list, tuple, set)):
-				items = list(card_iterable)
-		elif isinstance(card_iterable, str):
-				txt = card_iterable.strip()
-				items = txt.split() if (" " in txt) else [txt]
-		else:
-				items = [card_iterable]
-		i = 0
-		while i < len(items):
-				out.append(_to_str_card(items[i]))
-				i += 1
-		return out
+        out = []
+        if isinstance(card_iterable, (list, tuple, set)):
+                items = list(card_iterable)
+        elif isinstance(card_iterable, str):
+                txt = card_iterable
+                # simple split on spaces; _to_str_card will sanitize/upper
+                items = txt.split() if (" " in txt) else [txt]
+        else:
+                items = [card_iterable]
+        i = 0
+        while i < len(items):
+                out.append(_to_str_card(items[i]))
+                i += 1
+        return out
 
 def _straight_high_from_ranks(rvals):
 	u = sorted(set(rvals))
