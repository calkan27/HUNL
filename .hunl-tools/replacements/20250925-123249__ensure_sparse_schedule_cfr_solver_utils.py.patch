--- a/cfr_solver_utils.py
+++ b/cfr_solver_utils.py
@@ -203,18 +203,27 @@
 		return dict(u)
 
 
-	def _ensure_sparse_schedule(self):
-		if hasattr(self, "_round_iters") and hasattr(self, "_omit_prefix_iters") and hasattr(self, "_round_actions"):
-			return
-		self._round_iters = {0: 0, 1: 1000, 2: 2000, 3: 500}
-		self._round_iters_on_cache = {0: 0}
-		self._omit_prefix_iters = {"preflop": 980, "flop": 500, "turn": 500, "river": 1000}
-		self._round_actions = {
-			0: {"half_pot": True, "two_pot": True},
-			1: {"half_pot": False, "two_pot": False},
-			2: {"half_pot": False, "two_pot": False},
-			3: {"half_pot": False, "two_pot": False},
-		}
+    def _ensure_sparse_schedule(self):
+        if hasattr(self, "_round_iters") and hasattr(self, "_omit_prefix_iters") and hasattr(self, "_round_actions"):
+            return
+        self._round_iters = {0: 0, 1: 1000, 2: 2000, 3: 500}
+        self._round_iters_on_cache = {0: 0}
+        self._omit_prefix_iters = {"preflop": 980, "flop": 500, "turn": 500, "river": 1000}
+        pf = bool(getattr(getattr(self, "_config", None), "paper_faithful", False))
+        if pf:
+            self._round_actions = {
+                0: {"half_pot": False, "two_pot": False},
+                1: {"half_pot": False, "two_pot": False},
+                2: {"half_pot": False, "two_pot": False},
+                3: {"half_pot": False, "two_pot": False},
+            }
+        else:
+            self._round_actions = {
+                0: {"half_pot": True, "two_pot": True},
+                1: {"half_pot": False, "two_pot": False},
+                2: {"half_pot": False, "two_pot": False},
+                3: {"half_pot": False, "two_pot": False},
+            }
 
 	def apply_round_iteration_schedule(self, round_index: int) -> int:
 
