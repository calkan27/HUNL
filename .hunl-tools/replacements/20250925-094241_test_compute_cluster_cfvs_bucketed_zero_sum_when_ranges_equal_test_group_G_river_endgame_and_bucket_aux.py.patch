--- a/test_group_G_river_endgame_and_bucket_aux.py
+++ b/test_group_G_river_endgame_and_bucket_aux.py
@@ -277,22 +277,16 @@
     bet=st.floats(min_value=2.0, max_value=200.0),
 )
 def test_compute_cluster_cfvs_bucketed_zero_sum_when_ranges_equal(K, B, pot, bet):
-    rng = random.Random(99)
-    board = _mk_board(5, rng)
-    clusters = _mk_clusters(board, K=K, hands_per_cluster=8, seed=31)
-
-    # identical ranges for both players -> by symmetry and equal bets, expected aggregate CFV is ~0
-    r = _normalized_dict(list(range(K)), rng_seed=5)
-    node = _FakeNode(board, pot=float(pot), bets=(float(bet), float(bet)), stacks=(200.0, 200.0), r0=r, r1=r)
-    re = RiverEndgame(num_buckets=B, max_sample_per_cluster=6, seed=1729)
-
-    out = re.compute_cluster_cfvs(clusters, node, player=0, wins_fn=wins_fn,
-                                  best_hand_fn=best_hand_fn, hand_rank_fn=hand_rank_fn)
-    agg_ev = _aggregate_ev(out, r)
-    # Equal distributions + equal bets => expected EV should be ~0 in pot-fraction.
-    # (Ties and sampling variance make this approximate.)
-    assert math.isfinite(agg_ev)
-    assert abs(agg_ev) < 0.05, f"Symmetric bucket-mix + equal bets should yield ~0 pot-fraction CFV, got {agg_ev:.4f}"
+        rng = random.Random(99)
+        board = _mk_board(5, rng)
+        clusters = _mk_clusters(board, K=K, hands_per_cluster=8, seed=31)
+        r = _normalized_dict(list(range(K)), rng_seed=5)
+        node = _FakeNode(board, pot=float(pot), bets=(float(bet), float(bet)), stacks=(200.0, 200.0), r0=r, r1=r)
+        re = RiverEndgame(num_buckets=B, max_sample_per_cluster=6, seed=1729)
+        out = re.compute_cluster_cfvs(clusters, node, player=0, wins_fn=wins_fn, best_hand_fn=best_hand_fn, hand_rank_fn=hand_rank_fn)
+        agg_ev = _aggregate_ev(out, r)
+        assert math.isfinite(agg_ev)
+        assert abs(agg_ev) < 0.05
 
 def test_compute_cluster_cfvs_sampling_consistency_when_k_geq_available():
     rng = random.Random(7)
