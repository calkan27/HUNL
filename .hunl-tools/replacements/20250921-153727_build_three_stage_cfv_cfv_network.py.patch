--- a/cfv_network.py
+++ b/cfv_network.py
@@ -50,12 +50,13 @@
     def make_cfv_network(input_size, num_clusters):
         return CounterfactualValueNetwork(int(input_size), int(num_clusters))
 
-	def build_three_stage_cfv(input_size_preflop, input_size_flop, input_size_turn, num_clusters, device=None):
-		if device is None:
-			device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
-		models = {
-			'preflop': CounterfactualValueNetwork(int(input_size_preflop), int(num_clusters)).to(device),
-			'flop': CounterfactualValueNetwork(int(input_size_flop), int(num_clusters)).to(device),
-			'turn': CounterfactualValueNetwork(int(input_size_turn), int(num_clusters)).to(device),
-		}
-		return models
+    def build_three_stage_cfv(input_size_preflop, input_size_flop, input_size_turn, num_clusters, device=None):
+        if device is None:
+            device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
+        models = {
+            'preflop': CounterfactualValueNetwork(int(input_size_preflop), int(num_clusters)).to(device),
+            'flop': CounterfactualValueNetwork(int(input_size_flop), int(num_clusters)).to(device),
+            'turn': CounterfactualValueNetwork(int(input_size_turn), int(num_clusters)).to(device),
+        }
+        return models
+
