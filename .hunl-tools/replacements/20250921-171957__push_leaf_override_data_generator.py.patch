--- a/data_generator.py
+++ b/data_generator.py
@@ -340,15 +340,17 @@
 
 		return filtered
 
-	def _push_leaf_override(self, stage):
-		if not hasattr(self, "cfr_solver") or self.cfr_solver is None:
-			return None
-		snap = (int(getattr(self.cfr_solver, "depth_limit", 0)), int(getattr(self.cfr_solver, "total_iterations", 1)))
-		if str(getattr(self, "speed_profile", "")) == "test":
-			self.cfr_solver.depth_limit = 0
-			if int(getattr(self.cfr_solver, "total_iterations", 0)) < 1:
-				self.cfr_solver.total_iterations = 1
-		return snap
+    def _push_leaf_override(self, stage):
+        if not hasattr(self, "cfr_solver") or self.cfr_solver is None:
+            return None
+        snap = (int(getattr(self.cfr_solver, "depth_limit", 0)),
+                int(getattr(self.cfr_solver, "total_iterations", 1)))
+        if str(getattr(self, "speed_profile", "")) == "test":
+            self.cfr_solver.depth_limit = 0
+            if int(getattr(self.cfr_solver, "total_iterations", 0)) < 1:
+                self.cfr_solver.total_iterations = 1
+        return snap
+
 	def _pop_leaf_override(self, snap):
 		if not hasattr(self, "cfr_solver") or self.cfr_solver is None:
 			return False
