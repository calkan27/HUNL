--- a/cfr_core.py
+++ b/cfr_core.py
@@ -11,15 +11,17 @@
 		self.regret: Dict[Any, List[float]] = {}
 		self.strat_sum: Dict[Any, List[float]] = {}
 
-	def _infoset_key(self, node: Dict[str, Any], idx: int, pov_player: int) -> Tuple:
-		ps = node["nodes"][idx].public_state
-		return (
-			tuple(ps.board_cards),
-			int(ps.current_round),
-			(int(ps.current_bets[0]), int(ps.current_bets[1])),
-			int(ps.current_player),
-			int(pov_player),
-		)
+    def _infoset_key(self, node: Dict[str, Any], idx: int, pov_player: int) -> Tuple:
+        ps = node["nodes"][idx].public_state
+        cb0 = int(getattr(ps, "current_bets", (0, 0))[0]) if hasattr(ps, "current_bets") else 0
+        cb1 = int(getattr(ps, "current_bets", (0, 0))[1]) if hasattr(ps, "current_bets") else 0
+        return (
+            tuple(getattr(ps, "board_cards", [])),
+            int(getattr(ps, "current_round", 0)),
+            (cb0, cb1),
+            int(getattr(ps, "current_player", 0)),
+            int(pov_player),
+        )
 
 	def _policy_from_regret(self, key: Any, A: int, mask: List[bool]) -> List[float]:
 		if key not in self.regret:
