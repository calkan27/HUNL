--- a/smoke_eval_checks.py
+++ b/smoke_eval_checks.py
@@ -47,19 +47,20 @@
 
 def nonnegative_pot_deltas_ok(ps) -> bool:
 
-	before = ps.pot_size
-	a_bet = Action(ActionType.POT_SIZED_BET)
-	ps2 = ps.update_state(GameNode(ps), a_bet)
-	d1 = ps2.pot_size - before
-	if d1 < -1e-12:
-		return False
-	a_call = Action(ActionType.CALL)
-	ps3 = ps2.update_state(GameNode(ps2), a_call)
-	d2 = ps3.pot_size - ps2.pot_size
-	if d2 < -1e-12:
-		return False
-	return True
-
+        before = ps.pot_size
+        a_bet = Action(ActionType.POT_SIZED_BET)
+        ps2 = ps.update_state(GameNode(ps), a_bet)
+        d1 = ps2.pot_size - before
+        if d1 < -1e-12:
+                return False
+        if getattr(ps2, "is_terminal", False) or not hasattr(ps2, "update_state"):
+                return True
+        a_call = Action(ActionType.CALL)
+        ps3 = ps2.update_state(GameNode(ps2), a_call)
+        d2 = ps3.pot_size - ps2.pot_size
+        if d2 < -1e-12:
+                return False
+        return True
 
 def pot_monotonicity_ok_sequence(ps, steps: int = 6, allowed_actions=None) -> bool:
 		seq_ok = True
