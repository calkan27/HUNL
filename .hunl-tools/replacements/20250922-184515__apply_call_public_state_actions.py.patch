--- a/public_state_actions.py
+++ b/public_state_actions.py
@@ -52,29 +52,29 @@
 		st.is_terminal = True
 		st._assert_invariants(prev_pot=prev_pot)
 
-	def _apply_call(self, st, player, to_call):
-		opponent = (player + 1) % 2
-		if to_call == 0:
-			st.consecutive_checks = st.consecutive_checks + 1
-		caller_stack_before = st.stacks[player]
-		matched = caller_stack_before if caller_stack_before < to_call else to_call
-		st.stacks[player] = st.stacks[player] - matched
-		st.current_bets[player] = st.current_bets[player] + matched
-		st.pot_size = st.pot_size + matched
-		st.total_contrib[player] += matched
-		if matched < to_call:
-			excess = to_call - matched
-			st.last_refund_amount = float(excess)
-			st.current_bets[opponent] = st.current_bets[opponent] - excess
-			st.stacks[opponent] = st.stacks[opponent] + excess
-			st.pot_size = st.pot_size - excess
-			st.total_contrib[opponent] -= excess
-		if to_call > 0:
-			st.consecutive_checks = 0
-			st._last_action_was_call_on_bet = True
-		if st.current_bets[player] == st.current_bets[opponent]:
-			st._advance_street_if_closed(actor=player)
-			st._fast_forward_to_showdown_if_allin_locked()
+    def _apply_call(self, st, player, to_call):
+        opponent = (player + 1) % 2
+        if to_call == 0:
+            st.consecutive_checks = st.consecutive_checks + 1
+        caller_stack_before = st.stacks[player]
+        matched = caller_stack_before if caller_stack_before < to_call else to_call
+        st.stacks[player] = st.stacks[player] - matched
+        st.current_bets[player] = st.current_bets[player] + matched
+        st.pot_size = st.pot_size + matched
+        st.total_contrib[player] += matched
+        if matched < to_call:
+            excess = to_call - matched
+            st.last_refund_amount = float(excess)
+            st.current_bets[opponent] = st.current_bets[opponent] - excess
+            st.stacks[opponent] = st.stacks[opponent] + excess
+            st.pot_size = st.pot_size - excess
+            st.total_contrib[opponent] -= excess
+        if to_call > 0:
+            st.consecutive_checks = 0
+            st._last_action_was_call_on_bet = True
+        if st.current_bets[player] == st.current_bets[opponent]:
+            st._advance_street_if_closed(actor=player)
+            st._fast_forward_to_showdown_if_allin_locked()
 
 	def _apply_half_pot_bet(self, st, player, to_call):
 		opponent = (player + 1) % 2
